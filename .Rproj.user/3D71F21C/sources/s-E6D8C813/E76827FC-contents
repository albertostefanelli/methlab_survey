

options(scipen=999)

# PACKAGE INSTALLING AND UPGRADING #
# install and load defined list of packages
ipak <- function(pkg){
  new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
  if (length(new.pkg)) 
    install.packages(new.pkg, dependencies = TRUE,repos = c(
  CRAN = 'https://cran.rstudio.com',
  CRANextra = 'https://macos.rbind.io'
)
      )
  sapply(pkg, require, character.only = TRUE)
}

list_of_required_pkg <- c(
  "readstata13",
  #"dplyr",
  'fastDummies',
  'psych',
  'tidyverse',
  "MplusAutomation",
  "ggplot2",
  "rmarkdown",
  "knitr",
  "egg",
  "naniar"
  )

ipak(list_of_required_pkg)
# this is necessary for mplus automation
#BiocManager::install("rhdf5")

# USER DEFINED FUNCTIONS 
turn_function <- function (x) {(max(x,na.rm=T)) -x}


base <- readstata13::read.dta13("../anes_timeseries_2016_Stata13.dta", 
  convert.factors = F, 
  missing.type = T)


variables <- c(
  ### POPULISM ###
  "V162259", # Compromise in politics is selling out on one's principles [TO FLIP]
  "V162260", # Most politicians do not care about the people [TO FLIP]
  "V162261", # Most politicians are trustworty
  "V162262", # Politicians are the main problem in the U.S. [TO FLIP]
  "V162263", # Strong leader is good for U.S. even if bends rules to get things done [TO FLIP]
  "V162264", # People not politicians should make most important policy decisions [TO FLIP]
  "V162265", # Most politicians only care about interests of rich and powerful [TO FLIP]
  "V162267", # The will of the majority should always prevail [TO FLIP]

  ### [Other POP]
  "V162215", # Publ officials don't care what people think  [TO FLIP]
  "V162220", # Electoral integrity Post: do the rich buy elections [TO FLIP]

  ### IMMIGRANTS ###
  "V162266", # Minorities should adapt to to customs/traditions of U.S. [TO FLIP]
  "V162268", # Immigrants are generally good for America's economy
  "V162269", # America's culture is generally harmed by immigrants
  "V162270", # Immigrants increase crime rates in the U.S. [TO FLIP]

  "V162157", # What should immigration levels be
  "V162158", # #How likely immigration will take away jobs [TO FLIP]
  
  # AUTHORITARIANISM #  
  "V162168", # Country needs free thinkers 
  "V162169", # Country would be great by getting rid of rotten apples [TO FLIP]
  "V162170", # Country needs strong leader to take us back to true path [TO FLIP]

  # AUTHORITARIANISM #
  "V162239", #Child trait more important: independence or respect
  "V162240", #Child trait more important: obedience or self-reliance
  "V162241", #Child trait more important: curiosity or good manners
  "V162242", #Child trait more important: considerate or well-behaved

  "V162243", # Society should make sure everyone has equal opportunity [TO FLIP]
  "V162244", # We'd be better off if worried less about equality
  "V162245", # Not a big problem if some have more chance in life

  # L-R 
  "V162171", # 7pt scale liberal-Conservate: self placement
  "V162289", # 10 scale liberal conservative: self placement

  # ANTI-GLOBALIZATION 
  "V162176x", # SUMMARY- Favor/oppose free trade agreements
  "V162177",  # Should govt encourage/discourage outsourcing [TO FLIP + NA 3th category] 
  "V161310x",  # race self identification

  # Religiosity 
  "V161242", # PRE: Religion provides guidance in day-to-day living
  "V161245", # PRE: Attend religious services how often [TO FLIP]
  "V161241", # PRE: Is religion important part of R life
  "V161244",  # PRE: Ever attend church or religious services
  "V161246", # PRE: Ever think of self as part of church or denomination #YES or NO  
  "V162190" #  Important differences in what major parties stand for # YES NO 
  )


issues <- c(
  "V161178",  #PRE: 7pt scale spending and Services self-placement             
  "V161181",  #PRE: 7pt scale defense spending self-placement
  "V161184",  #PRE: 7pt scale govt-private medical insur scale: self-plmt                                         
  #"V161187",  #PRE: Should fed govt make it more difficult to buy a gun
  "V161189",  #PRE: 7pt scale guaranteed job-income scale: self-placement
  #"V161196",  #PRE: Build a wall with Mexico
  "V161198",  #PRE: 7pt scale govt assistance to blacks scale: self-placemt
  "V161201",  #PRE: 7pt scale environment-jobs tradeoff self-placement
  "V161204x", #PRE: SUMMARY - Favor or oppose affirmative action in universities
  "V161226x" #PRE: SUMMARY - require employers to offer paid leave to new parents
  # "V161205",  #PRE: Federal Budget Spending: Social Security
  # "V161206",  #PRE: Federal Budget Spending: public schools
  # "V161207",  #PRE: Federal Budget Spending: science and technology
  # "V161208",  #PRE: Federal Budget Spending: dealing with crime
  # "V161209",  #PRE: Federal Budget Spending: welfare programs
  # "V161210",  #PRE: Federal Budget Spending: child care
  # "V161211",  #PRE: Federal Budget Spending: aid to the poor
  # "V161212",  #PRE: Federal Budget Spending: protecting the environment
  # "V161213"   #PRE: Sending troops to fight ISIS
)  

issues_party_position_dem <- c(
"V161179",  #PRE: 7pt scale spending and Services self-placement             
"V161182",  #PRE: 7pt scale defense spending self-placement
"V161185",  #PRE: 7pt scale govt-private medical insur scale: self-placement                                   
#"V161187",  #PRE: Should fed govt make it more difficult to buy a gun  - 3 point
"V161190",  #PRE: 7pt scale guaranteed job-income scale: self-placement
#"V161196",  #PRE: Build a wall with Mexico - 3 point 
"V161199",  #PRE: 7pt scale govt assistance to blacks scale: self-placemt
"V161202", #PRE: 7pt scale environment-jobs tradeoff self-placement
"V162287"  #POST: CSES: 10pt scale: left-right Democratic Party
# "V161204x" #PRE: SUMMARY - Favor or oppose affirmative action in universities
# "V161205",  #PRE: Federal Budget Spending: Social Security
# "V161206",  #PRE: Federal Budget Spending: public schools
# "V161207",  #PRE: Federal Budget Spending: science and technology
# "V161208",  #PRE: Federal Budget Spending: dealing with crime
# "V161209",  #PRE: Federal Budget Spending: welfare programs
# "V161210",  #PRE: Federal Budget Spending: child care
# "V161211",  #PRE: Federal Budget Spending: aid to the poor
# "V161212",  #PRE: Federal Budget Spending: protecting the environment
# "V161213"   #PRE: Sending troops to fight ISIS
)  

issues_party_position_rep <- c(
"V161180",  #PRE: 7pt scale spending and Services self-placement             
"V161183",  #PRE: 7pt scale defense spending self-placement
"V161186",  #PRE: 7pt scale govt-private medical insur scale: self-plmt                                         
#"V161187", #PRE: Should fed govt make it more difficult to buy a gun 3 point
"V161191",  #PRE: 7pt scale guaranteed job-income scale: self-placement
#"V161196", #PRE: Build a wall with Mexico 3 point 
"V161200",  #PRE: 7pt scale govt assistance to blacks scale: self-placemt
"V161203",  #PRE: 7pt scale environment-jobs tradeoff self-placement
"V162288"   #POST: CSES: 10pt scale: left-right Republican Party
# "V161204x" #PRE: SUMMARY - Favor or oppose affirmative action in universities
# "V161205",  #PRE: Federal Budget Spending: Social Security
# "V161206",  #PRE: Federal Budget Spending: public schools
# "V161207",  #PRE: Federal Budget Spending: science and technology
# "V161208",  #PRE: Federal Budget Spending: dealing with crime
# "V161209",  #PRE: Federal Budget Spending: welfare programs
# "V161210",  #PRE: Federal Budget Spending: child care
# "V161211",  #PRE: Federal Budget Spending: aid to the poor
# "V161212",  #PRE: Federal Budget Spending: protecting the environment
# "V161213"   #PRE: Sending troops to fight ISIS
)  


affective_dem <- c(
"V161116", # PRE: Affect for Democratic Pres cand: angry 
"V161118", # PRE: Affect for Democratic Pres cand: afraid
"V161120"  # PRE: Affect for Democratic Pres cand: disgusted
)

affective_rep <- c(
"V161121", #PRE: Affect for Republican Pres cand: angry
"V161123", #PRE: Affect for Republican Pres cand: afraid
"V161125"  #PRE: Affect for Republican Pres cand: disgusted
)



controls_variables <- c(
  "V162256",  #interest [TO TURN]
  "V162257",  # follow_politics [TO TURN]
  "V162258",  # understand [TO TURN]
  "V161270",  # edu
  "V161361x", # income
  "V161342",  # gender [MALE, FEAMLE,OTHER] [TO FACTOR]
  "V161155"   # pid [NOTE HERE UNDER] [TO FACTOR],
  #"V161241",  #PRE: Is religion important part of R life [Important not important]
  #"V161244"   #PRE: Ever attend church or religious services [YES NO]
  )

# variable with no negative values

vars_no_negative <- c(
  "V162292b",
  "V161156"
  )

thermometers <- c(
"V161086", # PRE: Feeling Thermometer: Democratic Presidential cand
"V161087", # PRE: Feeling Thermometer: Republican Presidential cand
"V161088", # PRE: Feeling Thermometer: Libertarian Presidential cand
"V161089", # PRE: Feeling Thermometer: Green Party Presidential cand
"V161095", # PRE: Feeling Thermometer: Democratic Party
"V161096" # PRE: Feeling Thermometer: Republican Party
)



# NOT USED FOR NOW 

social_class <- c(
  "V162133",
# 1. Lower middle class 
# 2. Middle class 
# 3. Upper middle class
  "V161307" # V161307
# 1. Lower class 
# 2. Working class
# 3. Middle class 
# 4. Upper class
  )


# KNOWLEGED ITEMS CODED BY ME HERE UNDER
# MIGHT BE ASKED IN THE PRE QUESTIONNAIRE BUT NEEDED TO CHECK

knowledge <- c("V161513", # Years Senator Elected
  "V161514", # program Fed govt spends
  "V161515", # Party with Most Members In House Before Election
  "V161516"  # Party with Most Members In Senate Before Election
  )

# KNOWLEGED ITEMS ALREADY CODED BY THE ANES TEAM

factual_knowledge <- c(
  "V162072",
  "V162073a",
  "V162074a",
  "V162075a",
  "V162076b")

cand_traits <- c(
"V161160", #PRE: Pres Dem cand trait really cares
"V161161", #PRE: Pres Dem cand trait knowledgeable
"V161162", #PRE: Pres Dem cand trait honest
"V161163", #PRE: Pres Dem cand trait speaks mind
"V161165", #PRE: Pres Rep cand trait really cares
"V161166", #PRE: Pres Rep cand trait knowledgeable
"V161167", #PRE: Pres Rep cand trait honest
"V161168"  #PRE: Pres Rep cand trait speaks mind
)

# naninar based on value of the sacle. 
base_cleaned <- base %>% 
  replace_with_na_at(variables, ~.x >= 80) %>%
  replace_with_na_at(variables, ~.x < 0) %>%
  replace_with_na_at(issues, ~.x >= 80) %>%
  replace_with_na_at(issues, ~.x < 0) %>%
  replace_with_na_at(controls_variables, ~.x >= 80) %>%
  replace_with_na_at(controls_variables, ~.x < 0) %>%
  replace_with_na_at(vars_no_negative, ~.x >= 80) %>%
  replace_with_na_at(vars_no_negative, ~.x < -1) %>%
  replace_with_na_at(thermometers, ~.x < 0) %>%
  replace_with_na_at(thermometers, ~.x > 100) %>%
  replace_with_na_at("V161158x", ~.x < 1) %>% # PID 
  replace_with_na_at(social_class, ~.x < 1) %>%
  replace_with_na_at(knowledge, ~.x < 1) %>%
  replace_with_na_at(factual_knowledge, ~.x < 0) %>%
  replace_with_na_at("V161310x", ~.x < 0) %>%
  replace_with_na_at(affective_dem, ~.x < 0) %>%
  replace_with_na_at(affective_rep, ~.x < 0) %>%
  replace_with_na_at(issues_party_position_dem, ~.x < 0) %>%
  replace_with_na_at(issues_party_position_rep, ~.x < 0) %>%
  replace_with_na_at("V161021a", ~.x < -1)  %>%# primaries vote
  replace_with_na_at("V162062x", ~.x < 1)  %>% # vote choice 1 hilary 2 trump
  replace_with_na_at("V162062x", ~.x > 2)  %>%# vote choice 1 hilary 2 trump
  replace_with_na_at(cand_traits, ~.x < 1) %>% # vote choice 1 hilary 2 trump
  replace_with_na_at(cand_traits, ~.x > 5)  %>% # vote choice 1 hilary 2 trump
  replace_with_na_at("V161126", ~.x < 1)  %>% # LR 7 points 
  replace_with_na_at("V161126", ~.x > 7) %>%   # LR 7 points 
  replace_with_na_at("V161266d", ~.x <0)   # evangelical 


# recoding knowledge items 
# using these items becuase the factual_knowledge items coded by the ANES has higher NAs
base_cleaned$V161513 <- ifelse(base_cleaned$V161513==6,1,0)
base_cleaned$V161514 <- ifelse(base_cleaned$V161514==1,1,0)
base_cleaned$V161515 <- ifelse(base_cleaned$V161515==2,1,0)
base_cleaned$V161516 <- ifelse(base_cleaned$V161516==2,1,0)

# TURNING indices that are reversed coded 

vars_to_turn <- c(
  ### POPULISM ###
  "V162259", # Compromise in politics is selling out on one's principles [TO FLIP]
  "V162260", # Most politicians do not care about the people [TO FLIP]
  #"V162261", # Most politicians are trustworty
  "V162262", # Politicians are the main problem in the U.S. [TO FLIP]
  "V162263", # Strong leader is good for U.S. even if bends rules to get things done [TO FLIP]
  "V162264", # People not politicians should make most important policy decisions [TO FLIP]
  "V162265", # Most politicians only care about interests of rich and powerful [TO FLIP]
  "V162267", # The will of the majority should always prevail [TO FLIP]

  ### [Other POP]
  "V162215", # Publ officials don't care what people think  [TO FLIP]
  "V162220", # Electoral integrity Post: do the rich buy elections [TO FLIP]

  ### IMMIGRANTS ###
  "V162266", # Minorities should adapt to to customs/traditions of U.S. [TO FLIP]
  #"V162268", # Immigrants are generally good for America's economy
  "V162269", # America's culture is generally harmed by immigrants  [TO FLIP]
  "V162270", # Immigrants increase crime rates in the U.S. [TO FLIP]

  #"V162157", # What should immigration levels be
  "V162158", # #How likely immigration will take away jobs [TO FLIP]
  
  # AUTHORITARIANISM #  
  #"V162168", # Country needs free thinkers 
  "V162169", # Country would be great by getting rid of rotten apples [TO FLIP]
  "V162170", # Country needs strong leader to take us back to true path [TO FLIP]

  # AUTHORITARIANISM #
  # "V162239", #Child trait more important: independence or respect
  # "V162240", #Child trait more important: obedience or self-reliance
  # "V162241", #Child trait more important: curiosity or good manners
  # "V162242", #Child trait more important: considerate or well-behaved

  "V162243", # Society should make sure everyone has equal opportunity [TO FLIP]
  #"V162244", # We'd be better off if worried less about equality
  #"V162245", # Not a big problem if some have more chance in life

  # L-R 
  #"V162171" # 7pt scale liberal-Conservate: self placement

  # ANTI-GLOBALIZATION 
  #"V162176x", #SUMMARY- Favor/oppose free trade agreements
  #"V162177"  # Should govt encourage/discourage outsourcing [TO FLIP + NA 3th category] 
  "V162256", #interest [TO TURN]
  "V162257", # follow_politics [TO TURN]
  "V162258", # understand [TO TURN]
  #"V161270", # edu
  #"V161361x", #income
  #"V161342", #gender [MALE, FEAMLE,OTHER] [TO FACTOR]
  #"V161155" #pid [NOTE HERE UNDER] [TO FACTOR]
  # Religiosity 
  #"V161242", # PRE: Religion provides guidance in day-to-day living [NB: ONLY A SUBSET OF PPL]
  "V161241",  #PRE: Is religion important part of R life [Important not important]
  "V161245" # PRE: Attend religious services how often [TO FLIP] [NB: ONLY A SUBSET OF PPL]
  #"V161244" #PRE: Ever attend church or religious services [YES NO]

  )

# Need a loop because the turn function is not vectorized
for (i in vars_to_turn){
base_cleaned[[i]] <- turn_function(base_cleaned[[i]])

}

# FACTORIZING 

# gender
base_cleaned <- base_cleaned %>% mutate_at(vars(V161342), as.factor) 


# CREATING INDICES 

#1. ## IDEOLOGICAL POLARIZATION ##
# respondent self-placement on issues 
issues <- c(
"V161178",    #PRE: 7pt scale spending and Services self-placement             
"V161181",    #PRE: 7pt scale defense spending self-placement
"V161184",    #PRE: 7pt scale govt-private medical insur scale: self-plmt                                         
#"V161187",   #PRE: Should fed govt make it more difficult to buy a gun 3 point
"V161189",    #PRE: 7pt scale guaranteed job-income scale: self-placement
#"V161196",   #PRE: Build a wall with Mexico 3 point 
"V161198",    #PRE: 7pt scale govt assistance to blacks scale: self-placemt
"V161201",     #PRE: 7pt scale environment-jobs tradeoff self-placement
"V161204x",   #PRE: 7pt SUMMARY - Favor or oppose affirmative action in universities
"V161226x"    #PRE: 7pt SUMMARY - require employers to offer paid leave to new parents
# "V161205",  #PRE: Federal Budget Spending: Social Security
# "V161206",  #PRE: Federal Budget Spending: public schools
# "V161207",  #PRE: Federal Budget Spending: science and technology
# "V161208",  #PRE: Federal Budget Spending: dealing with crime
# "V161209",  #PRE: Federal Budget Spending: welfare programs
# "V161210",  #PRE: Federal Budget Spending: child care
# "V161211",  #PRE: Federal Budget Spending: aid to the poor
# "V161212",  #PRE: Federal Budget Spending: protecting the environment
# "V161213"   #PRE: Sending troops to fight ISIS
)  

# respondent democratic candidate placement on issues 
issues_party_position_dem <- c(
"V161179",    #PRE: 7pt scale spending and Services self-placement             
"V161182",    #PRE: 7pt scale defense spending self-placement
"V161185",    #PRE: 7pt scale govt-private medical insur scale: self-plmt                                         
#"V161187",   #PRE: Should fed govt make it more difficult to buy a gun 3 point
"V161190",    #PRE: 7pt scale guaranteed job-income scale: self-placement
#"V161196",   #PRE: Build a wall with Mexico 3 point 
"V161199",    #PRE: 7pt scale govt assistance to blacks scale: self-placemt
"V161202"     #PRE: 7pt scale environment-jobs tradeoff self-placement
#"V161204x"   #PRE: SUMMARY - Favor or oppose affirmative action in universities
# "V161205",  #PRE: Federal Budget Spending: Social Security
# "V161206",  #PRE: Federal Budget Spending: public schools
# "V161207",  #PRE: Federal Budget Spending: science and technology
# "V161208",  #PRE: Federal Budget Spending: dealing with crime
# "V161209",  #PRE: Federal Budget Spending: welfare programs
# "V161210",  #PRE: Federal Budget Spending: child care
# "V161211",  #PRE: Federal Budget Spending: aid to the poor
# "V161212",  #PRE: Federal Budget Spending: protecting the environment
# "V161213"   #PRE: Sending troops to fight ISIS
)  

# respondent republican candidate placement on issues 
issues_party_position_rep <- c(
"V161180",    #PRE: 7pt scale spending and Services self-placement             
"V161183",    #PRE: 7pt scale defense spending self-placement
"V161186",    #PRE: 7pt scale govt-private medical insur scale: self-plmt                                         
#"V161187",   #PRE: 3pt Should fed govt make it more difficult to buy a gun 3 point
"V161191",    #PRE: 7pt scale guaranteed job-income scale: self-placement
#"V161196",   #PRE: 3pt Build a wall with Mexico 3 point 
"V161200",    #PRE: 7pt scale govt assistance to blacks scale: self-placemt
"V161203"     #PRE: 7pt scale environment-jobs tradeoff self-placement
# "V161205",  #PRE: Federal Budget Spending: Social Security
# "V161206",  #PRE: Federal Budget Spending: public schools
# "V161207",  #PRE: Federal Budget Spending: science and technology
# "V161208",  #PRE: Federal Budget Spending: dealing with crime
# "V161209",  #PRE: Federal Budget Spending: welfare programs
# "V161210",  #PRE: Federal Budget Spending: child care
# "V161211",  #PRE: Federal Budget Spending: aid to the poor
# "V161212",  #PRE: Federal Budget Spending: protecting the environment
# "V161213"   #PRE: Sending troops to fight ISIS
)  

# Labels for the issues 
labels <- c("spending", 
  "defence", 
  "medical", 
  #"gun", 
  "garant_inc",
  #"wall", 
  "blacks", 
  "envir",
  "affirm",
  "paid"
  # "ss", 
  # "school", 
  # "science", 
  # "crime", 
  # "welfare", 
  # "child", 
  # "poor", 
  # "enviro", 
  # "isis"
  )


# looping on issues to create separate polarization indexes for each issue 
for (i  in seq(issues)){
iss <- issues[i]
label <- paste(labels[i],"spre", sep="_")
#print(label)
out <- sqrt((base_cleaned[[iss]] - mean(base_cleaned[[iss]],na.rm=TRUE))^2)
base_cleaned <- cbind(base_cleaned,out)
names(base_cleaned)[length(names(base_cleaned))] <- label
}
# averaging the separate polarization indexes together 
base_cleaned$spread_overall <- with(base_cleaned, (spending_spre + defence_spre + medical_spre + garant_inc_spre + blacks_spre + envir_spre)/6)

base_cleaned$spread_overall_1 <- apply(base_cleaned[,c("spending_spre","defence_spre","medical_spre","garant_inc_spre","blacks_spre","envir_spre")], 1, mean, na.rm=T)

for (i  in seq(issues)){
iss <- issues[i]
label <- paste(labels[i],"extr", sep="_")
#print(label)
out <- sqrt((base_cleaned[[iss]] - 4)^2)
print(median(base_cleaned[[iss]],na.rm=TRUE))
base_cleaned <- cbind(base_cleaned,out)
names(base_cleaned)[length(names(base_cleaned))] <- label
}

base_cleaned$extr_overall_1 <- apply(base_cleaned[,c("spending_extr","defence_extr","medical_extr","garant_inc_extr","blacks_extr","envir_extr")], 1, mean, na.rm=T)



base_cleaned$V162289 - median(base_cleaned$V162289,na.rm=T)


#2. ## Affective Polarization ##
# A. Which is the out-group candidate (most disliked)
# if > 0 outgoup is REP
# if < 0 outgoup is DEM
base_cleaned$diff_dem_rep <- with(base_cleaned,(V161086 - V161087))
base_cleaned$aff_ther <- sqrt(base_cleaned$diff_dem_rep^2)/100
base_cleaned$aff_party <- sqrt(with(base_cleaned,(V161095 - V161096))^2)


# just using vote to identify outgroup
#vote choice 1 hilary 2 trump

base_cleaned$aff_ther_v <- ifelse(base_cleaned$V162062x ==2, turn_function(with(base_cleaned,(V161086))), turn_function(with(base_cleaned,(V161087))))/100
base_cleaned$aff_ther_v_d <- ifelse(base_cleaned$V162062x ==2, with(base_cleaned,(V161087- V161086 )), with(base_cleaned,(V161086 - V161087)))/100

base_cleaned$aff_ther_v_d <- ifelse(base_cleaned$V162062x ==2, with(base_cleaned,(V161087- V161086 )), with(base_cleaned,(V161086 - V161087)))/100


affective_dem <- c(
'V161116',
'V161118',
'V161120' # PRE: Affect for Democratic Pres cand: angry 
)

affective_rep <- c(
"V161121", # PRE: Affect for Republican Pres cand: angry
"V161123", # PRE: Affect for Republican Pres cand: afraid
"V161125"  # PRE: Affect for Republican Pres cand: disgusted
)



lables_aff <- c("angry", 
"afraid", 
"disgusted"
)

# looping trough items.
# if CLINTON most disliked then CLINTON - TRUMP
# if TRUMP most disliked then TRUMP - CLINTON
int <- c()
for (i in seq(affective_dem)){
#i <- 1
var_d <- affective_dem[i]
var_r <- affective_rep[i]
label <- lables_aff[i]
int[[label]] <- ifelse(base_cleaned$diff_dem_rep <0, with(base_cleaned,get(var_d)) - with(base_cleaned,get(var_r)),
  ifelse(base_cleaned$diff_dem_rep ==0, NA, 
    with(base_cleaned,get(var_r)) - with(base_cleaned,get(var_d))
  ))

base_cleaned <- cbind(base_cleaned,int[i])
}
# SUM SCORE of the items 
base_cleaned$aff_sent <- with(base_cleaned,  (angry + afraid + disgusted))/3


# looping trough but using vote choice .
# if CLINTON most disliked then CLINTON - TRUMP
# if TRUMP most disliked then TRUMP - CLINTON

lables_aff <- c("angry_v", 
"afraid_v", 
"disgusted_v"
)

int <- c()
for (i in seq(affective_dem)){
#i <- 1
var_d <- affective_dem[i]
var_r <- affective_rep[i]
label <- lables_aff[i]
int[[label]] <- ifelse(base_cleaned$V162062x ==2, with(base_cleaned,get(var_d)) - with(base_cleaned,get(var_r)),
  ifelse(base_cleaned$diff_dem_rep ==0, NA, 
    with(base_cleaned,get(var_r)) - with(base_cleaned,get(var_d))
  ))

base_cleaned <- cbind(base_cleaned,int[i])
}
# SUM SCORE of the items 
base_cleaned$aff_vote <- with(base_cleaned,  (angry_v + afraid_v + disgusted_v))/3

# just using vote to identify outgroup
base_cleaned$aff_vote_c <- ifelse(base_cleaned$V162062x ==2, with(base_cleaned,  (V161116 + V161118 + V161120))/3, with(base_cleaned,  (V161121 + V161123 + V161125))/3)




#3. ## PID ##
# recoding PID with labels 
# Reference: independents (4)
base_cleaned$V161158x <- as.factor(base_cleaned$V161158x)
base_cleaned$pid_ind_f_7 <- recode(base_cleaned$V161158x,"3"="indDem", "4"="ind", "5"="indREP", "1"="StrongDemocrat", "2"="NotStrongDemocract","6"="NotStrongRepublican","7"="StrongRepublican")
base_cleaned$pid_ind_f_7 <- relevel(base_cleaned$pid_ind_f_7,4)

#3.1 ## STRENGHT PID ##
# recoding PID with labels 
# Reference: independents (4)
base_cleaned$pid_ind_to_recode <- recode(base_cleaned$V161158x,"3"="indDem", "4"="ind", "5"="indREP", "1"="StrongDemocrat", "2"="NotStrongDemocract","6"="NotStrongRepublican","7"="StrongRepublican")
base_cleaned$str_pid <- recode(base_cleaned$pid_ind_to_recode,"indDem"=1, "ind"=0, "indREP"=1, "StrongDemocrat"=3, "NotStrongDemocract"=2,"NotStrongRepublican"=2,"StrongRepublican"=3)
#base_cleaned$str_pid <- factor(base_cleaned$str_pid)

#3.2 ## PID 3 categories ##
# recoding PID with labels 
# Reference: independents (0)
base_cleaned$pid_3 <- as.factor(ifelse(as.numeric(base_cleaned$V161158x)<4,"DEM",
  ifelse(as.numeric(base_cleaned$V161158x)>4, "REP", "IND")))

base_cleaned$PID_2_REP <- as.factor(ifelse(as.numeric(base_cleaned$V161158x)<4,"DEM",
  ifelse(as.numeric(base_cleaned$V161158x)>4, "REP", NA)))

base_cleaned$PID_2_DEM <- relevel(base_cleaned$PID_2_REP, ref="REP")


lables_aff <- c("angry_p", 
"afraid_p", 
"disgusted_p"
)

int <- c()
for (i in seq(affective_dem)){
#i <- 1
var_d <- affective_dem[i]
var_r <- affective_rep[i]
label <- lables_aff[i]
int[[label]] <- ifelse(base_cleaned$pid_3 ==2, with(base_cleaned,get(var_d)) - with(base_cleaned,get(var_r)),
  ifelse(base_cleaned$pid_3 ==0, NA, 
    with(base_cleaned,get(var_r)) - with(base_cleaned,get(var_d))
  ))

base_cleaned <- cbind(base_cleaned,int[i])
}
# SUM SCORE of the items 
base_cleaned$aff_pid <- with(base_cleaned,  (angry_p + afraid_p + disgusted_p))/3

base_cleaned$aff_ther_p <- ifelse(base_cleaned$pid_3 ==2, with(base_cleaned,(V161087- V161086 )),
  ifelse(base_cleaned$pid_3 ==0, NA,
    with(base_cleaned,(V161086 - V161087))))/10

base_cleaned$aff_party_p <- ifelse(base_cleaned$pid_3 ==2, with(base_cleaned,(V161096 - V161095 )),
  ifelse(base_cleaned$pid_3 ==0, NA,
    with(base_cleaned,(V161095 - V161096))))/10

#### NEW AFFECTIVE MEASURES ####
# TRAITS MEASURES 
base_cleaned$neg_tra_dem <- apply(base_cleaned[,c("V161160","V161161","V161162")], 1, mean, na.rm=T)
base_cleaned$neg_tra_rep <- apply(base_cleaned[,c("V161165","V161166","V161167")], 1, mean, na.rm=T)

base_cleaned$aff_tra <- ifelse(base_cleaned$PID_2_REP =="REP", base_cleaned$neg_tra_dem,
    base_cleaned$neg_tra_rep)

base_cleaned$aff_tra_diff <- apply(cbind(sqrt((base_cleaned$V161160 - base_cleaned$V161165)^2),
sqrt((base_cleaned$V161161 - base_cleaned$V161166)^2),
sqrt((base_cleaned$V161162 - base_cleaned$V161167)^2)), 1, mean, na.rm=T)

# AFFECT MEASURES
# negative evaluation of the Democratic Candidate
base_cleaned$neg_aff_dem <- apply(base_cleaned[,affective_dem], 1, mean, na.rm=T)
# negative evaluation of the Democratic Candidate
base_cleaned$neg_aff_rep <- apply(base_cleaned[,affective_rep], 1, mean, na.rm=T)

base_cleaned$angry_l <- ifelse(base_cleaned$PID_2_REP =="REP", base_cleaned$V161116,
    base_cleaned$V161121)
base_cleaned$afraid_l <- ifelse(base_cleaned$PID_2_REP =="REP", base_cleaned$V161118,
    base_cleaned$V161123)
base_cleaned$disgusted_l <- ifelse(base_cleaned$PID_2_REP =="REP", base_cleaned$V161120,
    base_cleaned$V161125)


base_cleaned$aff_aff <- ifelse(base_cleaned$PID_2_REP =="REP", base_cleaned$neg_aff_dem,
    base_cleaned$neg_aff_rep)

base_cleaned$aff_aff_diff <- apply(cbind(sqrt((base_cleaned$V161116 - base_cleaned$V161121)^2),
sqrt((base_cleaned$V161118 - base_cleaned$V161123)^2),
sqrt((base_cleaned$V161120 - base_cleaned$V161125)^2)), 1, mean, na.rm=T)


base_cleaned$aff_trait_d_o <- ifelse(base_cleaned$pid_3 ==2, turn_function(base_cleaned$neg_tra_rep) - turn_function(base_cleaned$neg_tra_dem),
  ifelse(base_cleaned$pid_3 ==0, NA,
    turn_function(base_cleaned$neg_tra_dem) - turn_function(base_cleaned$neg_tra_rep)))



psych::alpha(base_cleaned[,c("V161160","V161161","V161162")],check.keys=TRUE)
psych::alpha(base_cleaned[,affective_dem],check.keys=TRUE)
psych::alpha(base_cleaned[,affective_rep],check.keys=TRUE)



psych::alpha(base_cleaned[,c("V161165","V161166","V161167",
"V161121", # PRE: Affect for Republican Pres cand: angry
"V161123", # PRE: Affect for Republican Pres cand: afraid
"V161125"  # PRE: Affect for Republican Pres cand: disgusted
)])


affective_dem <- c(
'V161116',
'V161118',
'V161120' # PRE: Affect for Democratic Pres cand: angry 
)

affective_rep <- c(
"V161121", # PRE: Affect for Republican Pres cand: angry
"V161123", # PRE: Affect for Republican Pres cand: afraid
"V161125"  # PRE: Affect for Republican Pres cand: disgusted
)



base_cleaned$aff_trait_d <- sqrt((base_cleaned$neg_tra_dem - base_cleaned$neg_tra_rep)^2)

#3.3. Voted Bernie 
# recoding -1 (inapplicable) as 0. This indicates people who did not vote in the primaries at all 
# Reference: independents (0)
base_cleaned$bernie <- ifelse(base_cleaned$V161021a==2,1,0)

base_cleaned$perc_pol <- sqrt((base_cleaned[["V162288"]] - base_cleaned[["V162287"]])^2)

#4. ## PROXIMITY a la Buttice##
# V162289 is self-placement on a 0-10 scale
# V161126 is elf-placement on a 1-7 scale more NAs.
# perception of TRUMP CLINTON on the 0-10 scale 
base_cleaned$prox_dem <- turn_function((base_cleaned[["V162289"]] - base_cleaned[["V162287"]])^2)
base_cleaned$prox_rep <- turn_function((base_cleaned[["V162289"]] - base_cleaned[["V162288"]])^2)
# using the non absolute version since it does provide better results. 
# also makes more sense theoretically. 
# should be interpreted as a continuum from liking the democrat more (negative values) to liking republican more (positive values)
#base_cleaned$prox_self <- abs(base_cleaned$prox_rep - base_cleaned$prox_dem)
base_cleaned$prox_self <- (base_cleaned$prox_rep - base_cleaned$prox_dem)
base_cleaned$prox_self_abs <- sqrt((base_cleaned$prox_rep - base_cleaned$prox_dem)^2)

# Expert survey placement candidates (CSES 2020)
# TRUMP 7
# CLINTON 3
base_cleaned$prox_dem <- turn_function((base_cleaned[["V162289"]] - 3)^2)
base_cleaned$prox_rep <- turn_function((base_cleaned[["V162289"]] - 7)^2)
# using the non absolute version since it does provide better results. 
# also makes more sense theoretically. 
# should be interpreted as a continuum from being close to the democrat more (negative values) to liking republican more (positive values)
base_cleaned$prox_objective <- (base_cleaned$prox_rep - base_cleaned$prox_dem)
base_cleaned$prox_objective_abs <- sqrt((base_cleaned$prox_rep - base_cleaned$prox_dem)^2)



#5. ## RACE ##
# recoding race (self-identification) with labels 
# Native American coded as other since very few observations 
# Reference: White
base_cleaned$V161310x <- recode(base_cleaned$V161310x,"1"="White", "2"="African American", "3"="Asian", "4"="Native American", "5"="Hispanic","6"="Others")
base_cleaned$V161310x <- as.factor(base_cleaned$V161310x)
base_cleaned$V161310x <- as.factor(ifelse(base_cleaned$V161310x=="Native American","Others",as.character(base_cleaned$V161310x)))
base_cleaned$V161310x <- relevel(base_cleaned$V161310x, ref="White")

#6. ## STRENGHT IDEOLOGICAL IDENTITY ##
# using the 7pt scale liberal-Conservative: self placement. 
# the more extreme on the scale the stronger the ideological identity. 4 is the centre
# not used but might be interesting to put in the Appendix
# base_cleaned$id_iden <-  recode(base_cleaned$V162171, "4"=0L,"1"=1L,"5"=1L,"2"=2L,"6"=2L,"3"=3L,"7"=3L)
# i think the median approach is better so i comment this out 
# base_cleaned$id_iden <-  recode(base_cleaned$V162289, "5"=0L,"0"=1L,"6"=1L,"1"=2L,"7"=2L,"2"=3L,"8"=3L,"3"=4L,"9"=4L, "4"=5L, "10"=5L)^2

base_cleaned$id_iden <- sqrt((base_cleaned$V162289 - median(base_cleaned$V162289,na.rm=T))^2)
#base_cleaned$id_iden <- sqrt((base_cleaned$V161126 - median(base_cleaned$V161126,na.rm=T))^2)

# # CORRELATION IDEOLOGICAL AND AFFECTIVE 
# with(base_cleaned,cor(spread_overall,aff_aff, use="complete.obs"))
# with(base_cleaned,cor(spread_overall,aff_vote, use="complete.obs"))
# with(base_cleaned,cor(aff_sent,spread_overall, use="complete.obs"))

# # if i use ABS i cannot go with both
# with(base_cleaned,cor(id_iden,prox_objective, use="complete.obs"))
# with(base_cleaned,cor(id_iden,prox_objective_abs, use="complete.obs"))

# with(base_cleaned,cor(id_iden,prox_self, use="complete.obs"))
# with(base_cleaned,cor(id_iden,prox_self_abs, use="complete.obs"))
# with(base_cleaned,cor(extr_overall_1,spread_overall, use="complete.obs"))

## MPLUS RENAMING VARIABLES ##

# DATA PREP FOR MPLUS

# PID 
data_mplus <- fastDummies::dummy_cols(base_cleaned,
  "pid_ind_f_7",
  remove_first_dummy = TRUE,
  ignore_na = TRUE)

names(data_mplus)[grep("pid_ind_f_7",names(data_mplus))][-1] <- c(
  "STRDEM","NOTSDEM","INDDEM","INDREP","NOTSREP","STRREP"

  )
# PID STRENGHT 
data_mplus <- fastDummies::dummy_cols(data_mplus,
  "str_pid",
  remove_first_dummy = TRUE,
  ignore_na = TRUE)

names(data_mplus)[grep("str_pid",names(data_mplus))][-1] <- c("LEANERS","WEAK","STRONG"

  )

# PID 3 categories 
data_mplus <- fastDummies::dummy_cols(data_mplus,
  "pid_3",
  remove_first_dummy = TRUE,
  ignore_na = TRUE)

names(data_mplus)[grep("pid_3",names(data_mplus))][-1] <- c("DEM","REP"

  )

# GENDER
data_mplus <- fastDummies::dummy_cols(data_mplus,
  "V161342",
  remove_first_dummy = TRUE,
  ignore_na = TRUE)

names(data_mplus)[grep("V161342_",names(data_mplus))] <- c("FEM",
  "OTHER"
  )

# make gender as a real dummy dropping "Other" as a sexual orientation 
data_mplus$ged_d <- as.factor(ifelse(data_mplus$V161342==3, NA, data_mplus$V161342)-1)

# RACE 
data_mplus <- fastDummies::dummy_cols(data_mplus,
  "V161310x",
  remove_first_dummy = TRUE,
  ignore_na = TRUE)

names(data_mplus)[grep("V161310x_",names(data_mplus))] <- c("BLACK","ASIAN","HISP","OTHERR")

# data_mplus <- fastDummies::dummy_cols(data_mplus,
#   "prox_dummy",
#   remove_first_dummy = TRUE,
#   ignore_na = TRUE)

# names(data_mplus)[grep("prox_dummy",names(data_mplus))][-1] <- c("PR_REP")

# data_mplus <- fastDummies::dummy_cols(data_mplus,
#   "V161241",
#   remove_first_dummy = TRUE,
#   ignore_na = TRUE)

# names(data_mplus)[grep("V161241",names(data_mplus))][-1] <- c("RELIMPNO")


data_mplus <- fastDummies::dummy_cols(data_mplus,
  "V162190",
  remove_first_dummy = TRUE,
  ignore_na = TRUE)

names(data_mplus)[grep("V162190",names(data_mplus))][-1] <- c("PDIFFNO")

# data_mplus$prox_self <- data_mplus$prox_self/10
# data_mplus$prox_objective <- data_mplus$prox_objective/10

data_mplus_centred <- data_mplus %>% mutate_at(vars(
    spread_overall,
    V162171,
    #V162256,
    #V162257, 
    V162258, 
    V161270,
    V161361x,
    V161267,
    #V162259,
    #V162260,
    #V162262,
    #V162264,
    #V162265,
    prox_rep,
    prox_dem,
    prox_self,
    prox_objective,
    id_iden,
    aff_tra,
    aff_tra_diff,
    aff_aff,
    aff_aff_diff,
    prox_self_abs,
    prox_objective_abs,
    spread_overall_1,
    extr_overall_1,
    perc_pol,
    V161245), ~(scale(.) %>% as.vector))
